version: '3.8'

services:
  nginx:
    build: 
      context: .
      dockerfile: nginx/Dockerfile
    container_name: media-nginx
    ports:
      - "8081:80"  # Избегаем занятого 8080
    volumes:
      - media_data:/srv/media:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    networks:
      - media-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build: 
      context: .
      dockerfile: api/Dockerfile
    container_name: media-api
    expose:
      - "8002"  # Внутренний порт, не занятый на хосте
    volumes:
      - media_data:/srv/media
    environment:
      - MEDIA_ROOT=/srv/media
      - PUBLIC_BASE_URL=${PUBLIC_BASE_URL:-http://localhost:8081}
      - API_TOKEN=${API_TOKEN}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-100}
      - ALLOWED_EXTENSIONS=${ALLOWED_EXTENSIONS:-jpg,jpeg,png,gif,webp,svg,mp4,webm,mkv,avi,mp3,wav,ogg,flac,aac}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,https://yourdomain.com}
    networks:
      - media-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  indexer:
    build: 
      context: .
      dockerfile: indexer/Dockerfile
    container_name: media-indexer
    volumes:
      - media_data:/srv/media
    environment:
      - MEDIA_ROOT=/srv/media
      - PUBLIC_BASE_URL=${PUBLIC_BASE_URL:-http://localhost:8081}
      - INDEXER_SCHEDULE=${INDEXER_SCHEDULE:-*/10 * * * *}
    networks:
      - media-network
    restart: unless-stopped
    depends_on:
      - api

volumes:
  media_data:
    driver: local

networks:
  media-network:
    driver: bridge