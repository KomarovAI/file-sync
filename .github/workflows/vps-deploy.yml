name: VPS Media Server Deploy

on:
  push:
    branches: [ vps-media-server ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
        
    - name: Add VPS to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to VPS
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} -p ${{ secrets.VPS_PORT }} << 'EOF'
          set -e
          
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
          cd /opt/file-sync || {
            echo "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
            mkdir -p /opt/file-sync
            cd /opt/file-sync
            git clone -b vps-media-server https://github.com/KomarovAI/file-sync.git . || exit 1
          }
          
          echo "–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥..."
          git fetch origin
          git reset --hard origin/vps-media-server
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env
          if [ ! -f .env ]; then
            echo "–°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
            cp .env.example .env
            echo "‚ö†Ô∏è  –ù–ï–û–ë–•–û–î–ò–ú–û –û–¢–†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ .env –§–ê–ô–õ!"
            echo "API_TOKEN=–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ-—Å–ª—É—á–∞–π–Ω—ã–π-—Ç–æ–∫–µ–Ω" >> .env
            echo "PUBLIC_BASE_URL=http://${{ secrets.VPS_HOST }}:8081" >> .env
          fi
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
          echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
          docker-compose down --remove-orphans || true
          
          # –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
          echo "–°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã..."
          docker-compose build --no-cache
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
          echo "–ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
          docker-compose up -d
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
          sleep 10
          docker-compose ps
          
          # –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã
          docker system prune -f
          
          echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
          echo "üåê –ú–µ–¥–∏–∞-—Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://${{ secrets.VPS_HOST }}:8081"
        EOF
        
    - name: Test deployment
      run: |
        echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API..."
        sleep 30
        curl -f http://${{ secrets.VPS_HOST }}:8081/healthz || {
          echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
          exit 1
        }
        echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        
        curl -f http://${{ secrets.VPS_HOST }}:8081/api/media || {
          echo "‚ùå Media API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
          exit 1
        }
        echo "‚úÖ Media API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üéâ –£—Å–ø–µ—à–Ω—ã–π –¥–µ–ø–ª–æ–π VPS Media Server!"
          echo "üîó URL: http://${{ secrets.VPS_HOST }}:8081"
          echo "üìä API: http://${{ secrets.VPS_HOST }}:8081/api/media"
        else
          echo "‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è!"
        fi